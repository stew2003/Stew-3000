
Hardware
  [] Fix stack memory
  [] Fix ram loader
  [] Add Zero register

Compiler
  [] implement optimizations for smol code
    Pre-compile: 
      [x] constant folding 
        [] consider what happens on overflow
      [] omit (+warn) unused vars and functions
      [] omit (+warn) dead code
    During compile:
      [x] special-case compilation of conditions (if/while)
      [] use more immediate instructions to reduce stack instructions
      [] var == 0 is same as !var 
      [] "compile to" given register (reduce movs)
    Post-compile:
      [x] eliminate redundant instrs
      [x] replace addi 1, _ / subi 1, _ with inr/dcr
      [x] remove addi 0, subi 0, etc (no effect)
  [] new types
    [] pointer types, unsigned (meaning unsigned int), char
    [] new expressions:
      [] char literal ('a')
      [] dereference
      [] & (address of)
      [] cast
    [] statements:
      [] assign/inr/dcr
        [x] make lefthand side an l-value (deref or var)
      [x] declare: make initializer optional
      [] declare-array
        [] allow size specifier, and initializer (string literal or {} array literal)
        [] size specifiers will be checked, then folded, then that compile-time size
          will be used to check the declaration
    [x] update checker to support new types
      [x] checker removes casts but uses them
      [x] checker may replace comparison ops with unsigned equivalents
      [x] checker converts chars to nums
      [] check array declarations

Docs
  [] document everything
