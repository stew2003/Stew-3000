
Hardware
  [] Fix stack memory
  [] Fix ram loader
  [] Add Zero register

Compiler
  [] implement optimizations for smol code
    Pre-compile: 
      [x] constant folding 
        [] consider what happens on overflow
      [] omit (+warn) unused vars and functions
      [] omit (+warn) dead code
    During compile:
      [x] special-case compilation of conditions (if/while)
      [] use more immediate instructions to reduce stack instructions
      [] var == 0 is same as !var 
      [] "compile to" given register (reduce movs)
    Post-compile:
      [x] eliminate redundant instrs
      [x] replace addi 1, _ / subi 1, _ with inr/dcr
      [x] remove addi 0, subi 0, etc (no effect)
  [] new types
    [] implement code gen for:
      [] char literals 
      [] dereference 
      [] & (address of)
      [] assignment 
      [] inr
      [] dcr
      [] array declarations
      [] unsigned comparison ops

Docs
  [] document everything
